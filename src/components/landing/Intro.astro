---
import Text from "@/components/fundations/elements/Text.astro";

interface Props {
  content: {
    title: string;
    subtitle: string;
    description: string;
    steps: {
      day: string;
      title: string;
      description: string;
    }[];
  }
}

const { content } = Astro.props;
---

<div class="flex flex-col gap-12 mt-12">
  <div class="flex flex-col lg:flex-row border p-8 border-dashed border-zinc-300 dark:border-zinc-700">
    <div>
      <div class="flex items-center gap-2 text-black dark:text-white">
        <div class="size-2 rounded-lg bg-green-500 animate-pulse"></div>
        <Text
          tag="p"
          variant="textSM"
          class="text-black dark:text-white typing-animation"
          data-text={content.subtitle}
        >
          <span class="typed-text"></span><span class="cursor">&nbsp;</span>
        </Text>
      </div>
      <Text
        tag="h1"
        variant="displayLG"
        class="text-black dark:text-white tracking-wide text-balance font-serif italic"
      >
        {content.title}
      </Text>
      <Text
        variant="textSM"
        class="text-zinc-500 dark:text-zinc-400 mt-4 text-pretty"
      >
        {content.description}
      </Text>
    </div>
  </div>
</div>
<ul class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 p-8 border-x border-dashed border-zinc-300 dark:border-zinc-700">
  {
    content.steps.map((step) => (
      <li>
        <Text
          tag="h3"
          variant="textBase"
          class="text-black dark:text-white block font-semibold"
        >
          {step.day}. {step.title}
        </Text>
        <Text
          tag="p"
          variant="textBase"
          class="text-zinc-500 dark:text-zinc-400 text-pretty"
        >
          {step.description}
        </Text>
      </li>
    ))
  }
</ul>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const elements = document.querySelectorAll(".typing-animation");

    elements.forEach((element) => {
      const text = element.dataset.text;
      const typedTextSpan = element.querySelector(".typed-text");
      const cursorSpan = element.querySelector(".cursor");
      const typingSpeed = 100;

      const typeText = (index = 0) => {
        if (index <= text.length) {
          typedTextSpan.textContent = text.substring(0, index);
          setTimeout(() => typeText(index + 1), typingSpeed);
        }
      };

      setTimeout(() => typeText(), 1500);
    });
  });
</script>
